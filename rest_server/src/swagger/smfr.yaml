swagger: '2.0'
info:
  title: SMFR Rest Server
  description: SMFR Rest API
  version: '1.0'
consumes:
  - application/json
produces:
  - application/json

paths:

  /collections:
    post:
      tags: [collections]
      operationId: server.api.collections.add_collection
      summary: Submit a new collection
      consumes:
        - multipart/form-data
      parameters:
        - in: body
          name: payload
          schema:
            $ref: '#/definitions/CollectorPayload'
        - in: formData
          name: kwfile
          type: file
          description: File with keywords by language
        - in: formData
          name: locfile
          type: file
          description: File with bounding boxes
        - in: formData
          name: config
          type: file
          description: Configuration file for Collector
      responses:
        200:
          description: Return collectors
          schema:
            type: object
            $ref: '#/definitions/CollectorResponse'
    get:
      tags: [collections]
      operationId: server.api.collections.get
      summary: Get all collections defined in SMFR
      responses:
        200:
          description: Return collectors
          schema:
            type: array
            items:
              $ref: '#/definitions/CollectorResponse'

  /collections/active:
    get:
      tags: [collections]
      operationId: server.api.collections.get_running_collectors
      summary: Get running collectors
      responses:
        200:
          description: Return collectors
          schema:
            type: array
            items:
              $ref: '#/definitions/CollectorResponse'

  /collections/inactive:
    get:
      tags: [collections]
      operationId: server.api.collections.get_stopped_collectors
      summary: Get inactive collections
      responses:
        200:
          description: Return inactive collectors
          schema:
            type: array
            items:
              $ref: '#/definitions/CollectorResponse'

  /collections/start/{collector_id}:
    post:
      tags: [collections]
      operationId: server.api.collections.start_collector
      parameters:
        - in: path
          name: collector_id
          type: integer
          required: true
          description: Numeric ID of the stored collector to start.
      summary: Start a previously defined collector
      responses:
        204:
          description: The collector was started successfully.

  /collections/stop/{collector_id}:
    post:
      tags: [collections]
      operationId: server.api.collections.stop_collector
      parameters:
        - in: path
          name: collector_id
          type: integer
          required: true
          description: Numeric ID of the stored collector to start.
      summary: Stop a previously defined and running collector
      responses:
        204:
          description: The collector was stopped successfully.

  /collections/remove/{collection_id}:
    post:
      tags: [collections]
      operationId: server.api.collections.remove_collection
      parameters:
        - in: path
          name: collection_id
          type: integer
          required: true
          description: Numeric ID of the stored collector whose collection must be deleted from DB
      summary: Remove a collection from the system
      responses:
        204:
          description: The collection was removed successfully

  /collections/startall:
    post:
      tags: [collections]
      operationId: server.api.collections.start_all
      summary: Start all inactive collections defined in the system
      responses:
        204:
          description: Collectors were started successfully

  /collections/stopall:
    post:
      tags: [collections]
      operationId: server.api.collections.stop_all
      summary: Stop all active collections defined in the system
      responses:
        204:
          description: Collectors were stopped successfully


definitions:

  Collection:
    type: object
    properties:
      id:
        type: integer
      trigger:
        type: string
        enum: [background, on-demand, manual]
      ctype:
        type: string
        enum: [keywords, geo]
      forecast_id:
        type: string
      tracking_keywords:
        type: array
        items:
          type: string
      locations:
        type: string
      languages:
        type: array
        items:
          type: string
      runtime:
        type: string
        format: date-time
      nuts3:
        type: string
      nuts3source:
        type: string
      status:
        type: string
        enum: [active, inactive]
      started_at:
        type: string
        format: date-time
      stopped_at:
        type: string
        format: date-time

  CollectorPayload:
    type: object
    required: [trigger]
    properties:
#      config:
#        type: string
#        description: Config file to init Collector instance
      trigger:
        type: string
        enum: [background, on-demand, manual]
#      ctype:
#        type: string
#        enum: [keywords, geo]
      forecast_id:
        type: string
#      kwfile:
#        type: string
#      locfile:
#        type: string
      runtime:
        type: string
        format: date-time
      nuts3:
        type: string
      nuts3source:
        type: string

  CollectorResponse:
    type: object
    properties:
      collection:
        $ref: '#/definitions/Collection'
      id:
        type: integer

