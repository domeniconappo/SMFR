version: "3.5"

services:

  zookeeper:
    restart: always
    image: ${DOCKER_REGISTRY}/${ZOOKEEPER_IMAGE}
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - '2181:2181'
    networks:
      - back-tier

  kafka:
    restart: always
    image: ${DOCKER_REGISTRY}/${KAFKA_IMAGE}
    container_name: kafka
    hostname: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_HOST_IP}
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://${DOCKER_HOST_IP}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: '${PERSISTER_KAFKA_TOPIC}:1:1,${ALL_ANNOTATOR_KAFKA_TOPICS},${GEOCODER_KAFKA_TOPIC}:1:1'
      KAFKA_HEAP_OPTS: -Xmx8912m -Xms8912m
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    networks:
      - back-tier
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  cassandrasmfr:
    build:
      context: ./
      dockerfile: cassandrasmfr/Dockerfile
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
    image: ${DOCKER_REGISTRY}/${CASSANDRA_IMAGE}:${image_tag}
    restart: always
    volumes:
    - vlm-cassandra:/var/lib/cassandra:rw
    container_name: cassandrasmfr
    networks:
    - back-tier
    ports:
    - '9042:9042'
    - '9160:9160'
    - '7000:7000'
    - '7001:7001'
    - '7199:7199'
    cap_add:
    - ALL
    privileged: true
    environment:
      MAX_HEAP_SIZE: 16G
      HEAP_NEWSIZE: 1800M
      JVM_OPTS: "-Xms16g -Xmx16g -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=/etc/cassandra/jmxremote.password -Dcom.sun.management.jmxremote.access.file=/etc/cassandra/jmxremote.access"
      CASSANDRA_START_RPC: "true"
      CASSANDRA_LISTEN_ADDRESS: auto
      CASSANDRA_RPC_ADDRESS: 0.0.0.0
      CASSANDRA_BROADCAST_ADDRESS: cassandrasmfr
      CASSANDRA_NUM_TOKENS: 256
      LOCAL_JMX: "no"

  geonames:
    build:
      context: ./
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
      dockerfile: geonames/Dockerfile
    image: ${DOCKER_REGISTRY}/${GEONAMES_IMAGE}:${image_tag}
    restart: always
    working_dir: /geonames
    container_name: geonames
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - back-tier
    environment:
      bootstrap.memory_lock: 'true'
      discovery.type: 'single-node'
    volumes:
      - geonames_index:/usr/share/elasticsearch/data:rw

  mysql:
    build:
      context: ./
      dockerfile: mysql/Dockerfile
    image: ${DOCKER_REGISTRY}/${MYSQL_IMAGE}:${image_tag}
    restart: always
    container_name: mysql
    ports:
      - '3306:3306'
    volumes:
      - vlm-mysql:/var/lib/mysql:rw
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DBNAME}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - back-tier

volumes:
  vlm-cassandra:
  vlm-mysql:
  geonames_index:

networks:
  back-tier:
